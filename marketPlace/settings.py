"""
Django settings for marketPlace project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-ef#_+)5uek$o@su3+l76=t__(t!o$$43g3@q(-@7@$^k5-7x)3'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'products',
    'contactus',
    'aboutus',
    'categories',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'marketPlace.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "templates"],  
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]
WSGI_APPLICATION = 'marketPlace.wsgi.application'


# Database


# Use SQLite by default for local/dev. Set USE_MYSQL=1 to switch to MySQL.
if os.environ.get('USE_MYSQL') == '1':
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': os.environ.get('MYSQL_DB', 'marketplace'),
            'USER': os.environ.get('MYSQL_USER', 'marketplace_user'),
            'PASSWORD': os.environ.get('MYSQL_PASSWORD', 'marketplace123'),
            'HOST': os.environ.get('MYSQL_HOST', 'localhost'),
            'PORT': os.environ.get('MYSQL_PORT', '3306'),
            'OPTIONS': {
                'charset': 'utf8mb4',
                'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
            },
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }

# HINT: MySQL provides better performance and scalability than SQLite
# HINT: Use utf8mb4 charset for full Unicode support (including emojis)
# HINT: STRICT_TRANS_TABLES ensures data integrity
# HINT: Consider using environment variables for database credentials in production


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'
STATICFILES_DIRS = [BASE_DIR / 'static']

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# TODO: Add media file configuration for handling uploaded images with MySQL:

# 1. **Static Files Configuration**:
#    - Add STATIC_ROOT = BASE_DIR / 'staticfiles'
#    - Add STATICFILES_DIRS = [BASE_DIR / 'static']

# 2. **Media Files Configuration** (User uploaded content):
#    - Add MEDIA_URL = '/media/' for serving uploaded files
#    - Add MEDIA_ROOT = BASE_DIR / 'media' for storing uploaded files

# 3. **MySQL-Specific Considerations**:
#    - Store only file paths in MySQL database (not actual files)
#    - Use proper file storage backends for production
#    - Consider using cloud storage (AWS S3, etc.) for production
#    - Handle file permissions and security properly

# 4. **Production Considerations**:
#    - Use environment variables for file paths
#    - Consider CDN for static and media files
#    - Implement proper file cleanup and maintenance
#    - Handle file upload size limits and validation

# HINT: Media files are user-uploaded content (like product images)
# HINT: Static files are CSS, JS, and images that are part of your code
# HINT: You'll need to create these directories manually
# HINT: Media files need special URL handling in development
# HINT: MySQL stores file paths, files are stored in filesystem
# HINT: Consider using Django Storages for production file handling

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Auth redirects
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'
